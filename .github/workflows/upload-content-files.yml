name: Update content files
on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/upload-content-files.yml
  repository_dispatch:
    types:
      - forms_changed
      - next_steps_changed

jobs:
  commit-updated-content:
    runs-on: ubuntu-latest
    concurrency: content-commit
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: git pull -r

      - name: Install dependencies
        run: npm ci

      - name: Update form and filter config
        if: github.event.event_type == 'forms_changed'
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        run: |
          npm run import:contentful:forms
          npm run import:contentful:answer-filters

      - name: Commit form and answer filter changes
        if: github.event.event_type == 'forms_changed'
        continue-on-error: true
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add config/forms/forms.json
          git commit -m "Updated form data from Contentful"
          git add config/answerFilters/answerFilters.json
          git commit -m "Updated answer filters from Contentful"
          git push origin main

      - name: Update next step config
        if: github.event.event_type == 'next_steps_changed'
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        run: npm run import:contentful:next-steps

      - name: Commit next step changes
        if: github.event.event_type == 'next_steps_changed'
        continue-on-error: true
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add config/nextSteps/nextStepOptions.json
          git commit -m "Updated next step options from Contentful"
          git push origin main

  push-content-to-staging:
    name: ðŸ›³ Push updated content changes to S3 (Staging)
    runs-on: ubuntu-latest
    concurrency: content-staging
    needs:
      - commit-updated-content
    environment:
      name: Content - Staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
      BUCKET: ${{ secrets.STAGING_CONTENT_BUCKET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: git pull -r
      - run: aws s3 cp ./config/forms/forms.json "s3://$BUCKET/forms.json"
      - run: aws s3 cp ./config/answerFilters/answerFilters.json "s3://$BUCKET/answerFilters.json"
      - run: aws s3 cp ./config/nextSteps/nextStepOptions.json "s3://$BUCKET/nextStepOptions.json"

  push-forms-and-filters-to-production:
    name: ðŸš€ Push forms and answer filters to S3 (Production)
    runs-on: ubuntu-latest
    concurrency: content-update-forms-and-filters-production
    needs:
      - push-content-to-staging
    environment:
      name: Content Update Forms And Answer Filters - Production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
      BUCKET: ${{ secrets.PRODUCTION_CONTENT_BUCKET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: git pull -r
      - run: aws s3 cp ./config/forms/forms.json "s3://$BUCKET/forms.json"
      - run: aws s3 cp ./config/answerFilters/answerFilters.json "s3://$BUCKET/answerFilters.json"

  push-next-steps-to-production:
    name: ðŸš€ Push next step options to S3 (Production)
    runs-on: ubuntu-latest
    concurrency: content-update-next-steps-production
    needs:
      - push-content-to-staging
    environment:
      name: Content Update Next Steps - Production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
      BUCKET: ${{ secrets.PRODUCTION_CONTENT_BUCKET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: git pull -r
      - run: aws s3 cp ./config/nextSteps/nextStepOptions.json "s3://$BUCKET/nextStepOptions.json"
