name: "Security scans"

on:
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]
  schedule:
    - cron: "0 0 * * *"

jobs:
  scan:
    name: Zap scan
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
      NEXT_PUBLIC_API_HOST: "http://localhost:3000"
      NEXTAUTH_URL: "http://localhost:3000"
      NODE_ENV: "test"
      NEXT_PUBLIC_ENV: "test"
      NEXT_PUBLIC_SOCIAL_CARE_APP_URL: "http://example.com"
      PORT: "3000"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/setup-node@v2
        with:
          cache: "npm"

      - name: Set up test database
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11"
          postgresql db: "postgres"
          postgresql user: "postgres"
          postgresql password: "postgres"

      - name: Install dependencies
        run: npm i

      - name: Apply database schema
        run: npm run db:push

      - name: Seed database
        run: npm run db:seed

      - name: Build app
        run: npm run build

      - name: Start app
        run: npm start &

      - name: Security scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
          target: http://localhost:3000/
          # ignore irrelevant rules
          rules_file_name: ".zap/rules.tsv"

  analyze:
    name: CodeQL analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["typescript"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
